module.exports = (function() {
    'use strict';

    const path = require('path');
    const util = require('./util');

    /**
     * Default Transform for the AppData persistence engine
     * @class Transform
     */
    function Transform() {
        this.type = require('./Type').Transform;
    }

    /**
     * Default: throw error on convert if not overwritten
     * @memberof Transform
     * @param {String} input - Should convert this
     * @throws {Error}
     */
    Transform.prototype.convert = function(input) {
        return new Error('Convert method on Transform not defined!');
    };

    /**
     * Default: throw error on parse if not overwritten
     * @memberof Transform
     * @return {Error}
     */
    Transform.prototype.parse = function() {
        return new Error('Parse method on Transform not defined!');
    };

    util.autoloader.map(path.join(__dirname, 'transform'), transformer => {
        let basename = transformer.replace(/\.[^/.]+$/, '');
        Transform[basename] = require(`./transform/${transformer}`);
    });

    return Transform;
})();
