/**
 * Autorequires files from a directory
 * @module util/autoloader
 */
exports = module.exports = (function() {
    'use strict';

    const fs = require('fs');
    const path = require('path');

    /**
     * @exports util/autoloader
     */
    return {
        /**
         * List all files as array from a directory
         * @alias module:util/autoloader.load
         * @param {String} directory - Files to fetch from
         * @return {Array} List of files
         */
        list: directory =>  {
            return fs.readdirSync(path.normalize(directory));
        },
        /**
         * Maps all files from a directory to the resolver
         * @alias module:util/autoloader.map
         * @param {String} directory - Files to fetch from
         * @param {Function} resolver - Mapping method with signature fn(file)
         */
        map: (directory, resolver) => {
            var dir = path.normalize(directory);
            fs.readdirSync(dir).forEach(function(file) {
                if(file === '.' || file === '..') {
                    return false;
                }

                return resolver(file);
            });
        }
    };
})();
